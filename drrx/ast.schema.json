{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/drrx/ast.schema.json",
  "title": "Dr.Rx Abstract Syntax Tree",
  "type": "object",
  "required": [
    "version",
    "root"
  ],
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^\n?\n?.*"
    },
    "root": {
      "$ref": "#/$defs/Root"
    },
    "warnings": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Diagnostic"
      }
    },
    "errors": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Diagnostic"
      }
    }
  },
  "$defs": {
    "Root": {
      "type": "object",
      "required": [
        "kind",
        "children"
      ],
      "properties": {
        "kind": {
          "const": "root"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Node"
          }
        }
      },
      "additionalProperties": false
    },
    "Node": {
      "type": "object",
      "required": [
        "kind",
        "name",
        "depth",
        "position"
      ],
      "properties": {
        "kind": {
          "enum": [
            "dir",
            "file"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "depth": {
          "type": "integer",
          "minimum": 0
        },
        "position": {
          "$ref": "#/$defs/Position"
        },
        "flow": {
          "$ref": "#/$defs/Flow"
        },
        "annotations": {
          "$ref": "#/$defs/Annotations"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Node"
          }
        },
        "path": {
          "type": "string",
          "description": "Computed absolute or root-relative path; optional."
        }
      },
      "additionalProperties": false,
      "allOf": [
        {
          "if": {
            "properties": {
              "kind": {
                "const": "dir"
              }
            }
          },
          "then": {
            "required": [
              "children"
            ],
            "properties": {
              "children": {
                "type": "array"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "kind": {
                "const": "file"
              }
            }
          },
          "then": {
            "properties": {
              "children": false
            }
          }
        }
      ]
    },
    "Position": {
      "type": "object",
      "required": [
        "line",
        "column"
      ],
      "properties": {
        "line": {
          "type": "integer",
          "minimum": 1
        },
        "column": {
          "type": "integer",
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "Flow": {
      "type": "object",
      "properties": {
        "open": {
          "type": "boolean",
          "description": "Line used '+' to open vein; first child places a '|' under this node."
        },
        "close": {
          "type": "boolean",
          "description": "Line used ':' to close sibling continuity at this depth (no further siblings)."
        },
        "continue": {
          "type": "boolean",
          "description": "Line showed '|' to indicate more siblings at this depth."
        }
      },
      "additionalProperties": false
    },
    "Annotations": {
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "present",
            "absent"
          ]
        },
        "source": {
          "oneOf": [
            {
              "const": "inline"
            },
            {
              "type": "string",
              "pattern": "^template:.+"
            },
            {
              "type": "string",
              "pattern": "^url:https?://.+"
            }
          ]
        },
        "mode": {
          "enum": [
            "file",
            "dir"
          ]
        },
        "ignore": {
          "type": "boolean"
        },
        "attrs": {
          "type": "string"
        }
      },
      "additionalProperties": true
    },
    "Diagnostic": {
      "type": "object",
      "required": [
        "severity",
        "code",
        "message",
        "position"
      ],
      "properties": {
        "severity": {
          "enum": [
            "warning",
            "error"
          ]
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "position": {
          "$ref": "#/$defs/Position"
        },
        "nodePath": {
          "type": "string",
          "description": "Optional path of the related node."
        }
      },
      "additionalProperties": false
    }
  }
}
